[{"content":"It is well known that Python has a problem when it comes to installation of applications since shared libraries can sometimes have significant API changes from one version to another. Added to the complication is the fact that many linux based distros have a preinstalled version of Python that comes with old versions of certain libraries that if overwritten can affect OS stability.\nIn this guide I will outline the best way to install Python applications \u0026amp; libraries from PyPI without breaking your system and causing a dependency hell.\nIs the program I am about to install an application or a library? In the context of installation we define an application as a Python program which exposes a user interface that can be interacted with. For eg. mitmproxy and dockersh both offer a CLI when called from the terminal which you can use in real time to complete tasks.\nLibraries on the other hand are the building blocks of above mentioned applications. They are usually installed on their own only when developing applications or building other libraries. For e.g requests and boto3 can only be imported from within a Python program. Calling them from the terminal serves no purpose.\nSometimes a downloadable package exposes a CLI but also pulls in libraries that you can use in your programs to build new tools. Examples of such hybrid packages are Impacket. When dealing with such a package you should look at the purpose you require the package for. Do you wish to use it\u0026rsquo;s CLI or do you wish to use the modules it provides to build an application? Depending on this purpose the method of installation changes as described below.\nInstalling applications The best way to install Python applications going forward is using pipx. On an Ubuntu system simply type the following in the terminal\nsudo apt install python3-pip pipx python3 -m pipx ensurepath pipx allows you to run Python applications by installing them in isolated environments along with their dependencies. If your distro\u0026rsquo;s package repository doesn\u0026rsquo;t contain pipx you can visit this link and find installation instructions for your platform.\n  Apps that don\u0026rsquo;t require root privileges   Applications that don\u0026rsquo;t require root privileges can be installed using the following command\npipx install PACKAGE In the above command replace PACKAGE with the name of the package you wish to install. For eg. pipx install mitmproxy\n  Apps that require root privileges   For applications that require root privileges use the following command\nsudo PIPX_HOME=/opt/pipx PIPX_BIN_DIR=/usr/local/bin pipx install PACKAGE In the above command replace PACKAGE with the name of the package you wish to install. For eg. sudo PIPX_HOME=/opt/pipx PIPX_BIN_DIR=/usr/local/bin pipx install dockersh\nInstalling libraries Since isolated installation of libraries are only really done during development you should only be installing them inside of python virtual environments. To get started we first need to install venv on our system.\nsudo apt install python3-venv \nThen we will create a new folder that will hold our project and then we will configure a virtual environment inside of it.\nmkdir myproject \u0026amp; cd myproject python3 -m venv myproject-venv  Be sure to add the myproject-venv/ folder to .gitignore if you are using git based workflows.\n To begin development you need to activate the virtual environment which can be done by\nsource myproject-venv/bin/activate This will change your prompt to (myproject-venv) user@mycomputer:~/myproject$ which signifies that the virtual environment is currently active.\nYou can now install any library from pip and it will be installed in the current virtual environment only without affecting your system or any other application.\npython3 -m pip install PACKAGE \nFinally when you are done with development work and wish to revert back to your regular system, simply enter deactivate at the terminal.\ndeactivate \n  Using sudo inside a virtual environment   A lot of times the application you are building or a component library requires root privileges to work correctly. In order to use sudo inside a virtual environment it has to be called differently than usual.\nsudo -s \u0026#34;PATH=$PATH\u0026#34; python3 main.py This will ensure that the sudo uses the current virtual environment\u0026rsquo;s Python interpreter than the system\u0026rsquo;s interpreter.\nConclusion Note that in the above commands we always invoke pip, pipx and venv as python modules like python3 -m pipx --version instead of pipx --version. Always invoke these tools in this manner as the latter method can result in unexpected behaviour sometimes. The practices described above should serve adequately for most users. They will only slightly change if you are working with pyenv or a recent version of Python that you installed on your own. If you have any queries feel free to reach out to me at solamarpreet@protonmail.com\n","permalink":"https://solamarpreet.github.io/posts/installingpythonapps/","summary":"It is well known that Python has a problem when it comes to installation of applications since shared libraries can sometimes have significant API changes from one version to another. Added to the complication is the fact that many linux based distros have a preinstalled version of Python that comes with old versions of certain libraries that if overwritten can affect OS stability.\nIn this guide I will outline the best way to install Python applications \u0026amp; libraries from PyPI without breaking your system and causing a dependency hell.","title":"How to correctly install Python applications \u0026 libraries"},{"content":"IndiaLeaks IndiaLeaks is an anonymous whistle-blowing platform that helps expose government wrongdoing \u0026 corporate non compliance. Built on top of the Tor project in partnership with organizations such as Free Press Unlimited, Indialeaks ensures your complaints receive wide media coverage.\nLink : https://indialeaks.org\nRTILikho RTILikho helps citizens, journalists, activists and lawyers file RTI applications. At RTILikho we empower and enable people to make better use of the Right to Information Act.\nLink : https://rtilikho.com\nTwitter Helpline : https://twitter.com/rtilikho\nCapture The Python A series of CTF styled challenges for Python learners.\nLink : https://github.com/solamarpreet/CTPy\nDockersh A python based shell for running Docker commands featuring autocomplete \u0026 command history.\nLink : https://github.com/solamarpreet/dockersh\nRTIBank [in development] RTIbank is a digital repository of RTI responses. Citizens can use RTIBank to search for data that has already been requested previously by other people using RTI.\nLink : https://rtibank.com\n","permalink":"https://solamarpreet.github.io/projects/","summary":"IndiaLeaks IndiaLeaks is an anonymous whistle-blowing platform that helps expose government wrongdoing \u0026 corporate non compliance. Built on top of the Tor project in partnership with organizations such as Free Press Unlimited, Indialeaks ensures your complaints receive wide media coverage.\nLink : https://indialeaks.org\nRTILikho RTILikho helps citizens, journalists, activists and lawyers file RTI applications. At RTILikho we empower and enable people to make better use of the Right to Information Act.","title":"My Projects"},{"content":"Hi.\nMade the switch from Medium since content there is now locked behind login pages. I thought of starting this blog in order to help newcomers understand tech concepts that are not well explained or elaborated upon by other resources.\nIf you feel the need to contact me use any other methods available at the homepage or write to me at solamarpreet@protonmail.com\n","permalink":"https://solamarpreet.github.io/posts/hello-world/","summary":"Hi.\nMade the switch from Medium since content there is now locked behind login pages. I thought of starting this blog in order to help newcomers understand tech concepts that are not well explained or elaborated upon by other resources.\nIf you feel the need to contact me use any other methods available at the homepage or write to me at solamarpreet@protonmail.com","title":"Hello World"}]